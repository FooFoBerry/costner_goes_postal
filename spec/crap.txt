<!DOCTYPE html>
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>RSpec::Mocks::MockExpectationError at &#x2F;github</title>

  <script type="text/javascript">
  //<!--
  function toggle(id) {
    var pre  = document.getElementById("pre-" + id);
    var post = document.getElementById("post-" + id);
    var context = document.getElementById("context-" + id);

    if (pre.style.display == 'block') {
      pre.style.display = 'none';
      post.style.display = 'none';
      context.style.background = "none";
    } else {
      pre.style.display = 'block';
      post.style.display = 'block';
      context.style.background = "#fffed9";
    }
  }

  function toggleBacktrace(){
    var bt = document.getElementById("backtrace");
    var toggler = document.getElementById("expando");

    if (bt.className == 'condensed') {
      bt.className = 'expanded';
      toggler.innerHTML = "(condense)";
    } else {
      bt.className = 'condensed';
      toggler.innerHTML = "(expand)";
    }
  }
  //-->
  </script>

<style type="text/css" media="screen">
  *                   {margin: 0; padding: 0; border: 0; outline: 0;}
  div.clear           {clear: both;}
  body                {background: #EEEEEE; margin: 0; padding: 0;
                       font-family: 'Lucida Grande', 'Lucida Sans Unicode',
                       'Garuda';}
  code                {font-family: 'Lucida Console', monospace;
                       font-size: 12px;}
  li                  {height: 18px;}
  ul                  {list-style: none; margin: 0; padding: 0;}
  ol:hover            {cursor: pointer;}
  ol li               {white-space: pre;}
  #explanation        {font-size: 12px; color: #666666;
                       margin: 20px 0 0 100px;}
/* WRAP */
  #wrap               {width: 1000px; background: #FFFFFF; margin: 0 auto;
                       padding: 30px 50px 20px 50px;
                       border-left: 1px solid #DDDDDD;
                       border-right: 1px solid #DDDDDD;}
/* HEADER */
  #header             {margin: 0 auto 25px auto;}
  #header img         {float: left;}
  #header #summary    {float: left; margin: 12px 0 0 20px; width:660px;
                       font-family: 'Lucida Grande', 'Lucida Sans Unicode';}
  h1                  {margin: 0; font-size: 36px; color: #981919;}
  h2                  {margin: 0; font-size: 22px; color: #333333;}
  #header ul          {margin: 0; font-size: 12px; color: #666666;}
  #header ul li strong{color: #444444;}
  #header ul li       {display: inline; padding: 0 10px;}
  #header ul li.first {padding-left: 0;}
  #header ul li.last  {border: 0; padding-right: 0;}
/* BODY */
  #backtrace,
  #get,
  #post,
  #cookies,
  #rack               {width: 980px; margin: 0 auto 10px auto;}
  p#nav               {float: right; font-size: 14px;}
/* BACKTRACE */
  a#expando           {float: left; padding-left: 5px; color: #666666;
                      font-size: 14px; text-decoration: none; cursor: pointer;}
  a#expando:hover     {text-decoration: underline;}
  h3                  {float: left; width: 100px; margin-bottom: 10px;
                       color: #981919; font-size: 14px; font-weight: bold;}
  #nav a              {color: #666666; text-decoration: none; padding: 0 5px;}
  #backtrace li.frame-info {background: #f7f7f7; padding-left: 10px;
                           font-size: 12px; color: #333333;}
  #backtrace ul       {list-style-position: outside; border: 1px solid #E9E9E9;
                       border-bottom: 0;}
  #backtrace ol       {width: 920px; margin-left: 50px;
                       font: 10px 'Lucida Console', monospace; color: #666666;}
  #backtrace ol li    {border: 0; border-left: 1px solid #E9E9E9;
                       padding: 2px 0;}
  #backtrace ol code  {font-size: 10px; color: #555555; padding-left: 5px;}
  #backtrace-ul li    {border-bottom: 1px solid #E9E9E9; height: auto;
                       padding: 3px 0;}
  #backtrace-ul .code {padding: 6px 0 4px 0;}
  #backtrace.condensed .system,
  #backtrace.condensed .framework {display:none;}
/* REQUEST DATA */
  p.no-data           {padding-top: 2px; font-size: 12px; color: #666666;}
  table.req           {width: 980px; text-align: left; font-size: 12px;
                       color: #666666; padding: 0; border-spacing: 0;
                       border: 1px solid #EEEEEE; border-bottom: 0;
                       border-left: 0;
                       clear:both}
  table.req tr th     {padding: 2px 10px; font-weight: bold;
                       background: #F7F7F7; border-bottom: 1px solid #EEEEEE;
                       border-left: 1px solid #EEEEEE;}
  table.req tr td     {padding: 2px 20px 2px 10px;
                       border-bottom: 1px solid #EEEEEE;
                       border-left: 1px solid #EEEEEE;}
/* HIDE PRE/POST CODE AT START */
  .pre-context,
  .post-context       {display: none;}

  table td.code       {width:750px}
  table td.code div   {width:750px;overflow:hidden}
</style>
</head>
<body>
  <div id="wrap">
    <div id="header">
      <img src="/__sinatra__/500.png" alt="application error" height="161" width="313" />
      <div id="summary">
        <h1><strong>RSpec::Mocks::MockExpectationError</strong> at <strong>&#x2F;github
          </strong></h1>
        <h2>Stub received unexpected message :save! with (no args)</h2>
        <ul>
          <li class="first"><strong>file:</strong> <code>
            error_generator.rb</code></li>
          <li><strong>location:</strong> <code>__raise
            </code></li>
          <li class="last"><strong>line:
            </strong> 144</li>
        </ul>
      </div>
      <div class="clear"></div>
    </div>

    <div id="backtrace" class='condensed'>
      <h3>BACKTRACE</h3>
      <p><a href="#" id="expando"
            onclick="toggleBacktrace(); return false">(expand)</a></p>
      <p id="nav"><strong>JUMP TO:</strong>
         <a href="#get-info">GET</a>
         <a href="#post-info">POST</a>
         <a href="#cookie-info">COOKIES</a>
         <a href="#env-info">ENV</a>
      </p>
      <div class="clear"></div>

      <ul id="backtrace-ul">

      
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rspec-mocks-2.14.4&#x2F;lib&#x2F;rspec&#x2F;mocks&#x2F;error_generator.rb</code> in
                <code><strong>__raise</strong></code>
            </li>

            <li class="code system">
              
              <ol start="137"
                  class="pre-context" id="pre-1"
                  onclick="toggle(1);">
                
                <li class="pre-context-line"><code>        else
</code></li>
                
                <li class="pre-context-line"><code>          &quot;nil&quot;
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def __raise(message)
</code></li>
                
                <li class="pre-context-line"><code>        message = opts[:message] unless opts[:message].nil?
</code></li>
                
              </ol>
              

              <ol start="144" class="context" id="1"
                  onclick="toggle(1);">
                <li class="context-line" id="context-1"><code>        Kernel::raise(RSpec::Mocks::MockExpectationError, message)</code></li>
              </ol>

              
              <ol start="145" class="post-context"
                  id="post-1" onclick="toggle(1);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def arg_message(*args)
</code></li>
                
                <li class="post-context-line"><code>        &quot; with &quot; + format_args(*args)
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def format_args(*args)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rspec-mocks-2.14.4&#x2F;lib&#x2F;rspec&#x2F;mocks&#x2F;error_generator.rb</code> in
                <code><strong>raise_unexpected_message_error</strong></code>
            </li>

            <li class="code system">
              
              <ol start="13"
                  class="pre-context" id="pre-2"
                  onclick="toggle(2);">
                
                <li class="pre-context-line"><code>      # @private
</code></li>
                
                <li class="pre-context-line"><code>      def opts
</code></li>
                
                <li class="pre-context-line"><code>        @opts ||= {}
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # @private
</code></li>
                
                <li class="pre-context-line"><code>      def raise_unexpected_message_error(message, *args)
</code></li>
                
              </ol>
              

              <ol start="20" class="context" id="2"
                  onclick="toggle(2);">
                <li class="context-line" id="context-2"><code>        __raise &quot;#{intro} received unexpected message :#{message}#{arg_message(*args)}&quot;</code></li>
              </ol>

              
              <ol start="21" class="post-context"
                  id="post-2" onclick="toggle(2);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # @private
</code></li>
                
                <li class="post-context-line"><code>      def raise_unexpected_message_args_error(expectation, *args)
</code></li>
                
                <li class="post-context-line"><code>        expected_args = format_args(*expectation.expected_args)
</code></li>
                
                <li class="post-context-line"><code>        actual_args = format_received_args(*args)
</code></li>
                
                <li class="post-context-line"><code>        __raise &quot;#{intro} received #{expectation.message.inspect} with unexpected arguments\n  expected: #{expected_args}\n       got: #{actual_args}&quot;
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rspec-mocks-2.14.4&#x2F;lib&#x2F;rspec&#x2F;mocks&#x2F;proxy.rb</code> in
                <code><strong>raise_unexpected_message_error</strong></code>
            </li>

            <li class="code system">
              
              <ol start="160"
                  class="pre-context" id="pre-3"
                  onclick="toggle(3);">
                
                <li class="pre-context-line"><code>        else
</code></li>
                
                <li class="pre-context-line"><code>          @object.__send__(:method_missing, message, *args, &amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # @private
</code></li>
                
                <li class="pre-context-line"><code>      def raise_unexpected_message_error(method_name, *args)
</code></li>
                
              </ol>
              

              <ol start="167" class="context" id="3"
                  onclick="toggle(3);">
                <li class="context-line" id="context-3"><code>        @error_generator.raise_unexpected_message_error method_name, *args</code></li>
              </ol>

              
              <ol start="168" class="post-context"
                  id="post-3" onclick="toggle(3);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # @private
</code></li>
                
                <li class="post-context-line"><code>      def raise_unexpected_message_args_error(expectation, *args)
</code></li>
                
                <li class="post-context-line"><code>        @error_generator.raise_unexpected_message_args_error(expectation, *args)
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rspec-mocks-2.14.4&#x2F;lib&#x2F;rspec&#x2F;mocks&#x2F;test_double.rb</code> in
                <code><strong>rescue in method_missing</strong></code>
            </li>

            <li class="code system">
              
              <ol start="93"
                  class="pre-context" id="pre-4"
                  onclick="toggle(4);">
                
                <li class="pre-context-line"><code>        __mock_proxy.record_message_received(message, *args, &amp;block)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        begin
</code></li>
                
                <li class="pre-context-line"><code>          __mock_proxy.null_object? ? self : super
</code></li>
                
                <li class="pre-context-line"><code>        rescue NameError
</code></li>
                
                <li class="pre-context-line"><code>          # Required wrapping doubles in an Array on Ruby 1.9.2
</code></li>
                
                <li class="pre-context-line"><code>          raise NoMethodError if [:to_a, :to_ary].include? message
</code></li>
                
              </ol>
              

              <ol start="100" class="context" id="4"
                  onclick="toggle(4);">
                <li class="context-line" id="context-4"><code>          __mock_proxy.raise_unexpected_message_error(message, *args)</code></li>
              </ol>

              
              <ol start="101" class="post-context"
                  id="post-4" onclick="toggle(4);">
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def extract_options(stubs_and_options)
</code></li>
                
                <li class="post-context-line"><code>        if stubs_and_options[:null_object]
</code></li>
                
                <li class="post-context-line"><code>          @null_object = stubs_and_options.delete(:null_object)
</code></li>
                
                <li class="post-context-line"><code>          RSpec.deprecate(&quot;double(&#x27;name&#x27;, :null_object =&gt; true)&quot;, :replacement =&gt; &quot;double(&#x27;name&#x27;).as_null_object&quot;)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rspec-mocks-2.14.4&#x2F;lib&#x2F;rspec&#x2F;mocks&#x2F;test_double.rb</code> in
                <code><strong>method_missing</strong></code>
            </li>

            <li class="code system">
              
              <ol start="88"
                  class="pre-context" id="pre-5"
                  onclick="toggle(5);">
                
                <li class="pre-context-line"><code>          case message
</code></li>
                
                <li class="pre-context-line"><code>          when :to_int        then return 0
</code></li>
                
                <li class="pre-context-line"><code>          when :to_a, :to_ary then return nil
</code></li>
                
                <li class="pre-context-line"><code>          end
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>        __mock_proxy.record_message_received(message, *args, &amp;block)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
              </ol>
              

              <ol start="95" class="context" id="5"
                  onclick="toggle(5);">
                <li class="context-line" id="context-5"><code>        begin</code></li>
              </ol>

              
              <ol start="96" class="post-context"
                  id="post-5" onclick="toggle(5);">
                
                <li class="post-context-line"><code>          __mock_proxy.null_object? ? self : super
</code></li>
                
                <li class="post-context-line"><code>        rescue NameError
</code></li>
                
                <li class="post-context-line"><code>          # Required wrapping doubles in an Array on Ruby 1.9.2
</code></li>
                
                <li class="post-context-line"><code>          raise NoMethodError if [:to_a, :to_ary].include? message
</code></li>
                
                <li class="post-context-line"><code>          __mock_proxy.raise_unexpected_message_error(message, *args)
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;Users&#x2F;watts&#x2F;code&#x2F;gSchool&#x2F;feedengine&#x2F;costner_goes_postal&#x2F;lib&#x2F;costner.rb</code> in
                <code><strong>block in &lt;class:Costner&gt;</strong></code>
            </li>

            <li class="code app">
              
              <ol start="1"
                  class="pre-context" id="pre-6"
                  onclick="toggle(6);">
                
                <li class="pre-context-line"><code>require &#x27;sinatra&#x27;
</code></li>
                
                <li class="pre-context-line"><code>require &#x27;pry&#x27;
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>class Costner &lt; Sinatra::Base
</code></li>
                
                <li class="pre-context-line"><code>  post &#x27;&#x2F;github&#x27; do
</code></li>
                
              </ol>
              

              <ol start="6" class="context" id="6"
                  onclick="toggle(6);">
                <li class="context-line" id="context-6"><code>    FooFoBerry::GitHubNotification.new(params[:payload]).save!</code></li>
              </ol>

              
              <ol start="7" class="post-context"
                  id="post-6" onclick="toggle(6);">
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;sinatra-1.4.4&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1586"
                  class="pre-context" id="pre-7"
                  onclick="toggle(7);">
                
                <li class="pre-context-line"><code>        method_name             = &quot;#{verb} #{path}&quot;
</code></li>
                
                <li class="pre-context-line"><code>        unbound_method          = generate_method(method_name, &amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        pattern, keys           = compile path
</code></li>
                
                <li class="pre-context-line"><code>        conditions, @conditions = @conditions, []
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        wrapper                 = block.arity != 0 ?
</code></li>
                
                <li class="pre-context-line"><code>          proc { |a,p| unbound_method.bind(a).call(*p) } :
</code></li>
                
              </ol>
              

              <ol start="1593" class="context" id="7"
                  onclick="toggle(7);">
                <li class="context-line" id="context-7"><code>          proc { |a,p| unbound_method.bind(a).call }</code></li>
              </ol>

              
              <ol start="1594" class="post-context"
                  id="post-7" onclick="toggle(7);">
                
                <li class="post-context-line"><code>        wrapper.instance_variable_set(:@route_name, method_name)
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        [ pattern, keys, conditions, wrapper ]
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def compile(path)
</code></li>
                
                <li class="post-context-line"><code>        if path.respond_to? :to_str
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;sinatra-1.4.4&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in compile!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1586"
                  class="pre-context" id="pre-8"
                  onclick="toggle(8);">
                
                <li class="pre-context-line"><code>        method_name             = &quot;#{verb} #{path}&quot;
</code></li>
                
                <li class="pre-context-line"><code>        unbound_method          = generate_method(method_name, &amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        pattern, keys           = compile path
</code></li>
                
                <li class="pre-context-line"><code>        conditions, @conditions = @conditions, []
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        wrapper                 = block.arity != 0 ?
</code></li>
                
                <li class="pre-context-line"><code>          proc { |a,p| unbound_method.bind(a).call(*p) } :
</code></li>
                
              </ol>
              

              <ol start="1593" class="context" id="8"
                  onclick="toggle(8);">
                <li class="context-line" id="context-8"><code>          proc { |a,p| unbound_method.bind(a).call }</code></li>
              </ol>

              
              <ol start="1594" class="post-context"
                  id="post-8" onclick="toggle(8);">
                
                <li class="post-context-line"><code>        wrapper.instance_variable_set(:@route_name, method_name)
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        [ pattern, keys, conditions, wrapper ]
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def compile(path)
</code></li>
                
                <li class="post-context-line"><code>        if path.respond_to? :to_str
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;sinatra-1.4.4&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>[]</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="950"
                  class="pre-context" id="pre-9"
                  onclick="toggle(9);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block = nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
                <li class="pre-context-line"><code>        routes.each do |pattern, keys, conditions, block|
</code></li>
                
                <li class="pre-context-line"><code>          returned_pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
                <li class="pre-context-line"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)
</code></li>
                
              </ol>
              

              <ol start="957" class="context" id="9"
                  onclick="toggle(9);">
                <li class="context-line" id="context-9"><code>            route_eval { block[*args] }</code></li>
              </ol>

              
              <ol start="958" class="post-context"
                  id="post-9" onclick="toggle(9);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>          # don&#x27;t wipe out pass_block in superclass
</code></li>
                
                <li class="post-context-line"><code>          pass_block = returned_pass_block if returned_pass_block
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;sinatra-1.4.4&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block (3 levels) in route!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="950"
                  class="pre-context" id="pre-10"
                  onclick="toggle(10);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block = nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
                <li class="pre-context-line"><code>        routes.each do |pattern, keys, conditions, block|
</code></li>
                
                <li class="pre-context-line"><code>          returned_pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
                <li class="pre-context-line"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)
</code></li>
                
              </ol>
              

              <ol start="957" class="context" id="10"
                  onclick="toggle(10);">
                <li class="context-line" id="context-10"><code>            route_eval { block[*args] }</code></li>
              </ol>

              
              <ol start="958" class="post-context"
                  id="post-10" onclick="toggle(10);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>          # don&#x27;t wipe out pass_block in superclass
</code></li>
                
                <li class="post-context-line"><code>          pass_block = returned_pass_block if returned_pass_block
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;sinatra-1.4.4&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>route_eval</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="969"
                  class="pre-context" id="pre-11"
                  onclick="toggle(11);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      route_eval(&amp;pass_block) if pass_block
</code></li>
                
                <li class="pre-context-line"><code>      route_missing
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run a route block and throw :halt with the result.
</code></li>
                
                <li class="pre-context-line"><code>    def route_eval
</code></li>
                
              </ol>
              

              <ol start="976" class="context" id="11"
                  onclick="toggle(11);">
                <li class="context-line" id="context-11"><code>      throw :halt, yield</code></li>
              </ol>

              
              <ol start="977" class="post-context"
                  id="post-11" onclick="toggle(11);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # If the current request matches pattern and conditions, fill params
</code></li>
                
                <li class="post-context-line"><code>    # with keys and call the given block.
</code></li>
                
                <li class="post-context-line"><code>    # Revert params afterwards.
</code></li>
                
                <li class="post-context-line"><code>    #
</code></li>
                
                <li class="post-context-line"><code>    # Returns pass block.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;sinatra-1.4.4&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block (2 levels) in route!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="950"
                  class="pre-context" id="pre-12"
                  onclick="toggle(12);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block = nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
                <li class="pre-context-line"><code>        routes.each do |pattern, keys, conditions, block|
</code></li>
                
                <li class="pre-context-line"><code>          returned_pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
                <li class="pre-context-line"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)
</code></li>
                
              </ol>
              

              <ol start="957" class="context" id="12"
                  onclick="toggle(12);">
                <li class="context-line" id="context-12"><code>            route_eval { block[*args] }</code></li>
              </ol>

              
              <ol start="958" class="post-context"
                  id="post-12" onclick="toggle(12);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>          # don&#x27;t wipe out pass_block in superclass
</code></li>
                
                <li class="post-context-line"><code>          pass_block = returned_pass_block if returned_pass_block
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;sinatra-1.4.4&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in process_route</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="990"
                  class="pre-context" id="pre-13"
                  onclick="toggle(13);">
                
                <li class="pre-context-line"><code>      if values.any?
</code></li>
                
                <li class="pre-context-line"><code>        original, @params = params, params.merge(&#x27;splat&#x27; =&gt; [], &#x27;captures&#x27; =&gt; values)
</code></li>
                
                <li class="pre-context-line"><code>        keys.zip(values) { |k,v| Array === @params[k] ? @params[k] &lt;&lt; v : @params[k] = v if v }
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      catch(:pass) do
</code></li>
                
                <li class="pre-context-line"><code>        conditions.each { |c| throw :pass if c.bind(self).call == false }
</code></li>
                
              </ol>
              

              <ol start="997" class="context" id="13"
                  onclick="toggle(13);">
                <li class="context-line" id="context-13"><code>        block ? block[self, values] : yield(self, values)</code></li>
              </ol>

              
              <ol start="998" class="post-context"
                  id="post-13" onclick="toggle(13);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
                <li class="post-context-line"><code>      @params = original if original
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # No matching route was found or all routes passed. The default
</code></li>
                
                <li class="post-context-line"><code>    # implementation is to forward the request downstream when running
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;sinatra-1.4.4&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>catch</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="988"
                  class="pre-context" id="pre-14"
                  onclick="toggle(14);">
                
                <li class="pre-context-line"><code>      values += match.captures.map! { |v| force_encoding URI_INSTANCE.unescape(v) if v }
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      if values.any?
</code></li>
                
                <li class="pre-context-line"><code>        original, @params = params, params.merge(&#x27;splat&#x27; =&gt; [], &#x27;captures&#x27; =&gt; values)
</code></li>
                
                <li class="pre-context-line"><code>        keys.zip(values) { |k,v| Array === @params[k] ? @params[k] &lt;&lt; v : @params[k] = v if v }
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
              </ol>
              

              <ol start="995" class="context" id="14"
                  onclick="toggle(14);">
                <li class="context-line" id="context-14"><code>      catch(:pass) do</code></li>
              </ol>

              
              <ol start="996" class="post-context"
                  id="post-14" onclick="toggle(14);">
                
                <li class="post-context-line"><code>        conditions.each { |c| throw :pass if c.bind(self).call == false }
</code></li>
                
                <li class="post-context-line"><code>        block ? block[self, values] : yield(self, values)
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
                <li class="post-context-line"><code>      @params = original if original
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;sinatra-1.4.4&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>process_route</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="988"
                  class="pre-context" id="pre-15"
                  onclick="toggle(15);">
                
                <li class="pre-context-line"><code>      values += match.captures.map! { |v| force_encoding URI_INSTANCE.unescape(v) if v }
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      if values.any?
</code></li>
                
                <li class="pre-context-line"><code>        original, @params = params, params.merge(&#x27;splat&#x27; =&gt; [], &#x27;captures&#x27; =&gt; values)
</code></li>
                
                <li class="pre-context-line"><code>        keys.zip(values) { |k,v| Array === @params[k] ? @params[k] &lt;&lt; v : @params[k] = v if v }
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
              </ol>
              

              <ol start="995" class="context" id="15"
                  onclick="toggle(15);">
                <li class="context-line" id="context-15"><code>      catch(:pass) do</code></li>
              </ol>

              
              <ol start="996" class="post-context"
                  id="post-15" onclick="toggle(15);">
                
                <li class="post-context-line"><code>        conditions.each { |c| throw :pass if c.bind(self).call == false }
</code></li>
                
                <li class="post-context-line"><code>        block ? block[self, values] : yield(self, values)
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
                <li class="post-context-line"><code>      @params = original if original
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;sinatra-1.4.4&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in route!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="948"
                  class="pre-context" id="pre-16"
                  onclick="toggle(16);">
                
                <li class="pre-context-line"><code>      base.filters[type].each { |args| process_route(*args) }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block = nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
                <li class="pre-context-line"><code>        routes.each do |pattern, keys, conditions, block|
</code></li>
                
              </ol>
              

              <ol start="955" class="context" id="16"
                  onclick="toggle(16);">
                <li class="context-line" id="context-16"><code>          returned_pass_block = process_route(pattern, keys, conditions) do |*args|</code></li>
              </ol>

              
              <ol start="956" class="post-context"
                  id="post-16" onclick="toggle(16);">
                
                <li class="post-context-line"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)
</code></li>
                
                <li class="post-context-line"><code>            route_eval { block[*args] }
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>          # don&#x27;t wipe out pass_block in superclass
</code></li>
                
                <li class="post-context-line"><code>          pass_block = returned_pass_block if returned_pass_block
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;sinatra-1.4.4&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>each</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="947"
                  class="pre-context" id="pre-17"
                  onclick="toggle(17);">
                
                <li class="pre-context-line"><code>      filter! type, base.superclass if base.superclass.respond_to?(:filters)
</code></li>
                
                <li class="pre-context-line"><code>      base.filters[type].each { |args| process_route(*args) }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block = nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
              </ol>
              

              <ol start="954" class="context" id="17"
                  onclick="toggle(17);">
                <li class="context-line" id="context-17"><code>        routes.each do |pattern, keys, conditions, block|</code></li>
              </ol>

              
              <ol start="955" class="post-context"
                  id="post-17" onclick="toggle(17);">
                
                <li class="post-context-line"><code>          returned_pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
                <li class="post-context-line"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)
</code></li>
                
                <li class="post-context-line"><code>            route_eval { block[*args] }
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>          # don&#x27;t wipe out pass_block in superclass
</code></li>
                
                <li class="post-context-line"><code>          pass_block = returned_pass_block if returned_pass_block
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;sinatra-1.4.4&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>route!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="947"
                  class="pre-context" id="pre-18"
                  onclick="toggle(18);">
                
                <li class="pre-context-line"><code>      filter! type, base.superclass if base.superclass.respond_to?(:filters)
</code></li>
                
                <li class="pre-context-line"><code>      base.filters[type].each { |args| process_route(*args) }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block = nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
              </ol>
              

              <ol start="954" class="context" id="18"
                  onclick="toggle(18);">
                <li class="context-line" id="context-18"><code>        routes.each do |pattern, keys, conditions, block|</code></li>
              </ol>

              
              <ol start="955" class="post-context"
                  id="post-18" onclick="toggle(18);">
                
                <li class="post-context-line"><code>          returned_pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
                <li class="post-context-line"><code>            env[&#x27;sinatra.route&#x27;] = block.instance_variable_get(:@route_name)
</code></li>
                
                <li class="post-context-line"><code>            route_eval { block[*args] }
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>          # don&#x27;t wipe out pass_block in superclass
</code></li>
                
                <li class="post-context-line"><code>          pass_block = returned_pass_block if returned_pass_block
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;sinatra-1.4.4&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in dispatch!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1060"
                  class="pre-context" id="pre-19"
                  onclick="toggle(19);">
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Dispatch a request with error handling.
</code></li>
                
                <li class="pre-context-line"><code>    def dispatch!
</code></li>
                
                <li class="pre-context-line"><code>      invoke do
</code></li>
                
                <li class="pre-context-line"><code>        static! if settings.static? &amp;&amp; (request.get? || request.head?)
</code></li>
                
                <li class="pre-context-line"><code>        filter! :before
</code></li>
                
              </ol>
              

              <ol start="1067" class="context" id="19"
                  onclick="toggle(19);">
                <li class="context-line" id="context-19"><code>        route!</code></li>
              </ol>

              
              <ol start="1068" class="post-context"
                  id="post-19" onclick="toggle(19);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    rescue ::Exception =&gt; boom
</code></li>
                
                <li class="post-context-line"><code>      invoke { handle_exception!(boom) }
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
                <li class="post-context-line"><code>      begin
</code></li>
                
                <li class="post-context-line"><code>        filter! :after unless env[&#x27;sinatra.static_file&#x27;]
</code></li>
                
                <li class="post-context-line"><code>      rescue ::Exception =&gt; boom
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;sinatra-1.4.4&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in invoke</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1042"
                  class="pre-context" id="pre-20"
                  onclick="toggle(20);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="1049" class="context" id="20"
                  onclick="toggle(20);">
                <li class="context-line" id="context-20"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="1050" class="post-context"
                  id="post-20" onclick="toggle(20);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        res = res.dup
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;sinatra-1.4.4&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>catch</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1042"
                  class="pre-context" id="pre-21"
                  onclick="toggle(21);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="1049" class="context" id="21"
                  onclick="toggle(21);">
                <li class="context-line" id="context-21"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="1050" class="post-context"
                  id="post-21" onclick="toggle(21);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        res = res.dup
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;sinatra-1.4.4&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>invoke</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1042"
                  class="pre-context" id="pre-22"
                  onclick="toggle(22);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="1049" class="context" id="22"
                  onclick="toggle(22);">
                <li class="context-line" id="context-22"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="1050" class="post-context"
                  id="post-22" onclick="toggle(22);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        res = res.dup
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;sinatra-1.4.4&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>dispatch!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1057"
                  class="pre-context" id="pre-23"
                  onclick="toggle(23);">
                
                <li class="pre-context-line"><code>        body res
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>      nil # avoid double setting the same response tuple twice
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Dispatch a request with error handling.
</code></li>
                
                <li class="pre-context-line"><code>    def dispatch!
</code></li>
                
              </ol>
              

              <ol start="1064" class="context" id="23"
                  onclick="toggle(23);">
                <li class="context-line" id="context-23"><code>      invoke do</code></li>
              </ol>

              
              <ol start="1065" class="post-context"
                  id="post-23" onclick="toggle(23);">
                
                <li class="post-context-line"><code>        static! if settings.static? &amp;&amp; (request.get? || request.head?)
</code></li>
                
                <li class="post-context-line"><code>        filter! :before
</code></li>
                
                <li class="post-context-line"><code>        route!
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    rescue ::Exception =&gt; boom
</code></li>
                
                <li class="post-context-line"><code>      invoke { handle_exception!(boom) }
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;sinatra-1.4.4&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in call!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="882"
                  class="pre-context" id="pre-24"
                  onclick="toggle(24);">
                
                <li class="pre-context-line"><code>      @request  = Request.new(env)
</code></li>
                
                <li class="pre-context-line"><code>      @response = Response.new
</code></li>
                
                <li class="pre-context-line"><code>      @params   = indifferent_params(@request.params)
</code></li>
                
                <li class="pre-context-line"><code>      template_cache.clear if settings.reload_templates
</code></li>
                
                <li class="pre-context-line"><code>      force_encoding(@params)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      @response[&#x27;Content-Type&#x27;] = nil
</code></li>
                
              </ol>
              

              <ol start="889" class="context" id="24"
                  onclick="toggle(24);">
                <li class="context-line" id="context-24"><code>      invoke { dispatch! }</code></li>
              </ol>

              
              <ol start="890" class="post-context"
                  id="post-24" onclick="toggle(24);">
                
                <li class="post-context-line"><code>      invoke { error_block!(response.status) } unless @env[&#x27;sinatra.error&#x27;]
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      unless @response[&#x27;Content-Type&#x27;]
</code></li>
                
                <li class="post-context-line"><code>        if Array === body and body[0].respond_to? :content_type
</code></li>
                
                <li class="post-context-line"><code>          content_type body[0].content_type
</code></li>
                
                <li class="post-context-line"><code>        else
</code></li>
                
                <li class="post-context-line"><code>          content_type :html
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;sinatra-1.4.4&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in invoke</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1042"
                  class="pre-context" id="pre-25"
                  onclick="toggle(25);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="1049" class="context" id="25"
                  onclick="toggle(25);">
                <li class="context-line" id="context-25"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="1050" class="post-context"
                  id="post-25" onclick="toggle(25);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        res = res.dup
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;sinatra-1.4.4&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>catch</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1042"
                  class="pre-context" id="pre-26"
                  onclick="toggle(26);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="1049" class="context" id="26"
                  onclick="toggle(26);">
                <li class="context-line" id="context-26"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="1050" class="post-context"
                  id="post-26" onclick="toggle(26);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        res = res.dup
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;sinatra-1.4.4&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>invoke</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1042"
                  class="pre-context" id="pre-27"
                  onclick="toggle(27);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="1049" class="context" id="27"
                  onclick="toggle(27);">
                <li class="context-line" id="context-27"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="1050" class="post-context"
                  id="post-27" onclick="toggle(27);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        res = res.dup
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;sinatra-1.4.4&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="882"
                  class="pre-context" id="pre-28"
                  onclick="toggle(28);">
                
                <li class="pre-context-line"><code>      @request  = Request.new(env)
</code></li>
                
                <li class="pre-context-line"><code>      @response = Response.new
</code></li>
                
                <li class="pre-context-line"><code>      @params   = indifferent_params(@request.params)
</code></li>
                
                <li class="pre-context-line"><code>      template_cache.clear if settings.reload_templates
</code></li>
                
                <li class="pre-context-line"><code>      force_encoding(@params)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      @response[&#x27;Content-Type&#x27;] = nil
</code></li>
                
              </ol>
              

              <ol start="889" class="context" id="28"
                  onclick="toggle(28);">
                <li class="context-line" id="context-28"><code>      invoke { dispatch! }</code></li>
              </ol>

              
              <ol start="890" class="post-context"
                  id="post-28" onclick="toggle(28);">
                
                <li class="post-context-line"><code>      invoke { error_block!(response.status) } unless @env[&#x27;sinatra.error&#x27;]
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      unless @response[&#x27;Content-Type&#x27;]
</code></li>
                
                <li class="post-context-line"><code>        if Array === body and body[0].respond_to? :content_type
</code></li>
                
                <li class="post-context-line"><code>          content_type body[0].content_type
</code></li>
                
                <li class="post-context-line"><code>        else
</code></li>
                
                <li class="post-context-line"><code>          content_type :html
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;sinatra-1.4.4&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="870"
                  class="pre-context" id="pre-29"
                  onclick="toggle(29);">
                
                <li class="pre-context-line"><code>      @app = app
</code></li>
                
                <li class="pre-context-line"><code>      @template_cache = Tilt::Cache.new
</code></li>
                
                <li class="pre-context-line"><code>      yield self if block_given?
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Rack call interface.
</code></li>
                
                <li class="pre-context-line"><code>    def call(env)
</code></li>
                
              </ol>
              

              <ol start="877" class="context" id="29"
                  onclick="toggle(29);">
                <li class="context-line" id="context-29"><code>      dup.call!(env)</code></li>
              </ol>

              
              <ol start="878" class="post-context"
                  id="post-29" onclick="toggle(29);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def call!(env) # :nodoc:
</code></li>
                
                <li class="post-context-line"><code>      @env      = env
</code></li>
                
                <li class="post-context-line"><code>      @request  = Request.new(env)
</code></li>
                
                <li class="post-context-line"><code>      @response = Response.new
</code></li>
                
                <li class="post-context-line"><code>      @params   = indifferent_params(@request.params)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rack-protection-1.5.1&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;xss_header.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="11"
                  class="pre-context" id="pre-30"
                  onclick="toggle(30);">
                
                <li class="pre-context-line"><code>    #
</code></li>
                
                <li class="pre-context-line"><code>    # Options:
</code></li>
                
                <li class="pre-context-line"><code>    # xss_mode:: How the browser should prevent the attack (default: :block)
</code></li>
                
                <li class="pre-context-line"><code>    class XSSHeader &lt; Base
</code></li>
                
                <li class="pre-context-line"><code>      default_options :xss_mode =&gt; :block, :nosniff =&gt; true
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="18" class="context" id="30"
                  onclick="toggle(30);">
                <li class="context-line" id="context-30"><code>        status, headers, body = @app.call(env)</code></li>
              </ol>

              
              <ol start="19" class="post-context"
                  id="post-30" onclick="toggle(30);">
                
                <li class="post-context-line"><code>        headers[&#x27;X-XSS-Protection&#x27;]       ||= &quot;1; mode=#{options[:xss_mode]}&quot; if html? headers
</code></li>
                
                <li class="post-context-line"><code>        headers[&#x27;X-Content-Type-Options&#x27;] ||= &#x27;nosniff&#x27;                       if options[:nosniff]
</code></li>
                
                <li class="post-context-line"><code>        [status, headers, body]
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rack-protection-1.5.1&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;path_traversal.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="9"
                  class="pre-context" id="pre-31"
                  onclick="toggle(31);">
                
                <li class="pre-context-line"><code>    #
</code></li>
                
                <li class="pre-context-line"><code>    # Unescapes &#x27;&#x2F;&#x27; and &#x27;.&#x27;, expands +path_info+.
</code></li>
                
                <li class="pre-context-line"><code>    # Thus &lt;tt&gt;GET &#x2F;foo&#x2F;%2e%2e%2fbar&lt;&#x2F;tt&gt; becomes &lt;tt&gt;GET &#x2F;bar&lt;&#x2F;tt&gt;.
</code></li>
                
                <li class="pre-context-line"><code>    class PathTraversal &lt; Base
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
                <li class="pre-context-line"><code>        path_was         = env[&quot;PATH_INFO&quot;]
</code></li>
                
                <li class="pre-context-line"><code>        env[&quot;PATH_INFO&quot;] = cleanup path_was if path_was &amp;&amp; !path_was.empty?
</code></li>
                
              </ol>
              

              <ol start="16" class="context" id="31"
                  onclick="toggle(31);">
                <li class="context-line" id="context-31"><code>        app.call env</code></li>
              </ol>

              
              <ol start="17" class="post-context"
                  id="post-31" onclick="toggle(31);">
                
                <li class="post-context-line"><code>      ensure
</code></li>
                
                <li class="post-context-line"><code>        env[&quot;PATH_INFO&quot;] = path_was
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def cleanup(path)
</code></li>
                
                <li class="post-context-line"><code>        if path.respond_to?(:encoding)
</code></li>
                
                <li class="post-context-line"><code>          # Ruby 1.9+ M17N
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rack-protection-1.5.1&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;json_csrf.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="11"
                  class="pre-context" id="pre-32"
                  onclick="toggle(32);">
                
                <li class="pre-context-line"><code>    # Array prototype has been patched to track data. Checks the referrer
</code></li>
                
                <li class="pre-context-line"><code>    # even on GET requests if the content type is JSON.
</code></li>
                
                <li class="pre-context-line"><code>    class JsonCsrf &lt; Base
</code></li>
                
                <li class="pre-context-line"><code>      alias react deny
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
                <li class="pre-context-line"><code>        request               = Request.new(env)
</code></li>
                
              </ol>
              

              <ol start="18" class="context" id="32"
                  onclick="toggle(32);">
                <li class="context-line" id="context-32"><code>        status, headers, body = app.call(env)</code></li>
              </ol>

              
              <ol start="19" class="post-context"
                  id="post-32" onclick="toggle(32);">
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        if has_vector? request, headers
</code></li>
                
                <li class="post-context-line"><code>          warn env, &quot;attack prevented by #{self.class}&quot;
</code></li>
                
                <li class="post-context-line"><code>          react(env) or [status, headers, body]
</code></li>
                
                <li class="post-context-line"><code>        else
</code></li>
                
                <li class="post-context-line"><code>          [status, headers, body]
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rack-protection-1.5.1&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="43"
                  class="pre-context" id="pre-33"
                  onclick="toggle(33);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
                <li class="pre-context-line"><code>        unless accepts? env
</code></li>
                
                <li class="pre-context-line"><code>          warn env, &quot;attack prevented by #{self.class}&quot;
</code></li>
                
                <li class="pre-context-line"><code>          instrument env
</code></li>
                
                <li class="pre-context-line"><code>          result = react env
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
              </ol>
              

              <ol start="50" class="context" id="33"
                  onclick="toggle(33);">
                <li class="context-line" id="context-33"><code>        result or app.call(env)</code></li>
              </ol>

              
              <ol start="51" class="post-context"
                  id="post-33" onclick="toggle(33);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def react(env)
</code></li>
                
                <li class="post-context-line"><code>        result = send(options[:reaction], env)
</code></li>
                
                <li class="post-context-line"><code>        result if Array === result and result.size == 3
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rack-protection-1.5.1&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="43"
                  class="pre-context" id="pre-34"
                  onclick="toggle(34);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
                <li class="pre-context-line"><code>        unless accepts? env
</code></li>
                
                <li class="pre-context-line"><code>          warn env, &quot;attack prevented by #{self.class}&quot;
</code></li>
                
                <li class="pre-context-line"><code>          instrument env
</code></li>
                
                <li class="pre-context-line"><code>          result = react env
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
              </ol>
              

              <ol start="50" class="context" id="34"
                  onclick="toggle(34);">
                <li class="context-line" id="context-34"><code>        result or app.call(env)</code></li>
              </ol>

              
              <ol start="51" class="post-context"
                  id="post-34" onclick="toggle(34);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def react(env)
</code></li>
                
                <li class="post-context-line"><code>        result = send(options[:reaction], env)
</code></li>
                
                <li class="post-context-line"><code>        result if Array === result and result.size == 3
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rack-protection-1.5.1&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;frame_options.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="24"
                  class="pre-context" id="pre-35"
                  onclick="toggle(35);">
                
                <li class="pre-context-line"><code>          frame_options = options[:frame_options]
</code></li>
                
                <li class="pre-context-line"><code>          frame_options = options[:frame_options].to_s.upcase unless frame_options.respond_to? :to_str
</code></li>
                
                <li class="pre-context-line"><code>          frame_options.to_str
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="31" class="context" id="35"
                  onclick="toggle(35);">
                <li class="context-line" id="context-35"><code>        status, headers, body        = @app.call(env)</code></li>
              </ol>

              
              <ol start="32" class="post-context"
                  id="post-35" onclick="toggle(35);">
                
                <li class="post-context-line"><code>        headers[&#x27;X-Frame-Options&#x27;] ||= frame_options if html? headers
</code></li>
                
                <li class="post-context-line"><code>        [status, headers, body]
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rack-1.5.2&#x2F;lib&#x2F;rack&#x2F;nulllogger.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="2"
                  class="pre-context" id="pre-36"
                  onclick="toggle(36);">
                
                <li class="pre-context-line"><code>  class NullLogger
</code></li>
                
                <li class="pre-context-line"><code>    def initialize(app)
</code></li>
                
                <li class="pre-context-line"><code>      @app = app
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def call(env)
</code></li>
                
                <li class="pre-context-line"><code>      env[&#x27;rack.logger&#x27;] = self
</code></li>
                
              </ol>
              

              <ol start="9" class="context" id="36"
                  onclick="toggle(36);">
                <li class="context-line" id="context-36"><code>      @app.call(env)</code></li>
              </ol>

              
              <ol start="10" class="post-context"
                  id="post-36" onclick="toggle(36);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def info(progname = nil, &amp;block);  end
</code></li>
                
                <li class="post-context-line"><code>    def debug(progname = nil, &amp;block); end
</code></li>
                
                <li class="post-context-line"><code>    def warn(progname = nil, &amp;block);  end
</code></li>
                
                <li class="post-context-line"><code>    def error(progname = nil, &amp;block); end
</code></li>
                
                <li class="post-context-line"><code>    def fatal(progname = nil, &amp;block); end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rack-1.5.2&#x2F;lib&#x2F;rack&#x2F;head.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="4"
                  class="pre-context" id="pre-37"
                  onclick="toggle(37);">
                
                <li class="pre-context-line"><code>  # Rack::Head returns an empty body for all HEAD requests. It leaves
</code></li>
                
                <li class="pre-context-line"><code>  # all other requests unchanged.
</code></li>
                
                <li class="pre-context-line"><code>  def initialize(app)
</code></li>
                
                <li class="pre-context-line"><code>    @app = app
</code></li>
                
                <li class="pre-context-line"><code>  end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>  def call(env)
</code></li>
                
              </ol>
              

              <ol start="11" class="context" id="37"
                  onclick="toggle(37);">
                <li class="context-line" id="context-37"><code>    status, headers, body = @app.call(env)</code></li>
              </ol>

              
              <ol start="12" class="post-context"
                  id="post-37" onclick="toggle(37);">
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    if env[&quot;REQUEST_METHOD&quot;] == &quot;HEAD&quot;
</code></li>
                
                <li class="post-context-line"><code>      body.close if body.respond_to? :close
</code></li>
                
                <li class="post-context-line"><code>      [status, headers, []]
</code></li>
                
                <li class="post-context-line"><code>    else
</code></li>
                
                <li class="post-context-line"><code>      [status, headers, body]
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;sinatra-1.4.4&#x2F;lib&#x2F;sinatra&#x2F;show_exceptions.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="14"
                  class="pre-context" id="pre-38"
                  onclick="toggle(38);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def initialize(app)
</code></li>
                
                <li class="pre-context-line"><code>      @app      = app
</code></li>
                
                <li class="pre-context-line"><code>      @template = ERB.new(TEMPLATE)
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def call(env)
</code></li>
                
              </ol>
              

              <ol start="21" class="context" id="38"
                  onclick="toggle(38);">
                <li class="context-line" id="context-38"><code>      @app.call(env)</code></li>
              </ol>

              
              <ol start="22" class="post-context"
                  id="post-38" onclick="toggle(38);">
                
                <li class="post-context-line"><code>    rescue Exception =&gt; e
</code></li>
                
                <li class="post-context-line"><code>      errors, env[&quot;rack.errors&quot;] = env[&quot;rack.errors&quot;], @@eats_errors
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      if prefers_plain_text?(env)
</code></li>
                
                <li class="post-context-line"><code>        content_type = &quot;text&#x2F;plain&quot;
</code></li>
                
                <li class="post-context-line"><code>        body = [dump_exception(e)]
</code></li>
                
                <li class="post-context-line"><code>      else
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;sinatra-1.4.4&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="173"
                  class="pre-context" id="pre-39"
                  onclick="toggle(39);">
                
                <li class="pre-context-line"><code>  # Some Rack handlers (Thin, Rainbows!) implement an extended body object protocol, however,
</code></li>
                
                <li class="pre-context-line"><code>  # some middleware (namely Rack::Lint) will break it by not mirroring the methods in question.
</code></li>
                
                <li class="pre-context-line"><code>  # This middleware will detect an extended body object and will make sure it reaches the
</code></li>
                
                <li class="pre-context-line"><code>  # handler directly. We do this here, so our middleware and middleware set up by the app will
</code></li>
                
                <li class="pre-context-line"><code>  # still be able to run.
</code></li>
                
                <li class="pre-context-line"><code>  class ExtendedRack &lt; Struct.new(:app)
</code></li>
                
                <li class="pre-context-line"><code>    def call(env)
</code></li>
                
              </ol>
              

              <ol start="180" class="context" id="39"
                  onclick="toggle(39);">
                <li class="context-line" id="context-39"><code>      result, callback = app.call(env), env[&#x27;async.callback&#x27;]</code></li>
              </ol>

              
              <ol start="181" class="post-context"
                  id="post-39" onclick="toggle(39);">
                
                <li class="post-context-line"><code>      return result unless callback and async?(*result)
</code></li>
                
                <li class="post-context-line"><code>      after_response { callback.call result }
</code></li>
                
                <li class="post-context-line"><code>      setup_close(env, *result)
</code></li>
                
                <li class="post-context-line"><code>      throw :async
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    private
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;sinatra-1.4.4&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1997"
                  class="pre-context" id="pre-40"
                  onclick="toggle(40);">
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def helpers
</code></li>
                
                <li class="pre-context-line"><code>      @instance
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def call(env)
</code></li>
                
              </ol>
              

              <ol start="2004" class="context" id="40"
                  onclick="toggle(40);">
                <li class="context-line" id="context-40"><code>      @stack.call(env)</code></li>
              </ol>

              
              <ol start="2005" class="post-context"
                  id="post-40" onclick="toggle(40);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def inspect
</code></li>
                
                <li class="post-context-line"><code>      &quot;#&lt;#{@instance.class} app_file=#{settings.app_file.inspect}&gt;&quot;
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rack-test-0.6.2&#x2F;lib&#x2F;rack&#x2F;mock_session.rb</code> in
                <code><strong>request</strong></code>
            </li>

            <li class="code system">
              
              <ol start="23"
                  class="pre-context" id="pre-41"
                  onclick="toggle(41);">
                
                <li class="pre-context-line"><code>    def set_cookie(cookie, uri = nil)
</code></li>
                
                <li class="pre-context-line"><code>      cookie_jar.merge(cookie, uri)
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def request(uri, env)
</code></li>
                
                <li class="pre-context-line"><code>      env[&quot;HTTP_COOKIE&quot;] ||= cookie_jar.for(uri)
</code></li>
                
                <li class="pre-context-line"><code>      @last_request = Rack::Request.new(env)
</code></li>
                
              </ol>
              

              <ol start="30" class="context" id="41"
                  onclick="toggle(41);">
                <li class="context-line" id="context-41"><code>      status, headers, body = @app.call(@last_request.env)</code></li>
              </ol>

              
              <ol start="31" class="post-context"
                  id="post-41" onclick="toggle(41);">
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      @last_response = MockResponse.new(status, headers, body, env[&quot;rack.errors&quot;].flush)
</code></li>
                
                <li class="post-context-line"><code>      body.close if body.respond_to?(:close)
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      cookie_jar.merge(last_response.headers[&quot;Set-Cookie&quot;], uri)
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      @after_request.each { |hook| hook.call }
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rack-test-0.6.2&#x2F;lib&#x2F;rack&#x2F;test.rb</code> in
                <code><strong>process_request</strong></code>
            </li>

            <li class="code system">
              
              <ol start="223"
                  class="pre-context" id="pre-42"
                  onclick="toggle(42);">
                
                <li class="pre-context-line"><code>        Rack::MockRequest.env_for(uri.to_s, env)
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def process_request(uri, env)
</code></li>
                
                <li class="pre-context-line"><code>        uri = URI.parse(uri)
</code></li>
                
                <li class="pre-context-line"><code>        uri.host ||= @default_host
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
              </ol>
              

              <ol start="230" class="context" id="42"
                  onclick="toggle(42);">
                <li class="context-line" id="context-42"><code>        @rack_mock_session.request(uri, env)</code></li>
              </ol>

              
              <ol start="231" class="post-context"
                  id="post-42" onclick="toggle(42);">
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        if retry_with_digest_auth?(env)
</code></li>
                
                <li class="post-context-line"><code>          auth_env = env.merge({
</code></li>
                
                <li class="post-context-line"><code>            &quot;HTTP_AUTHORIZATION&quot;          =&gt; digest_auth_header,
</code></li>
                
                <li class="post-context-line"><code>            &quot;rack-test.digest_auth_retry&quot; =&gt; true
</code></li>
                
                <li class="post-context-line"><code>          })
</code></li>
                
                <li class="post-context-line"><code>          auth_env.delete(&#x27;rack.request&#x27;)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rack-test-0.6.2&#x2F;lib&#x2F;rack&#x2F;test.rb</code> in
                <code><strong>post</strong></code>
            </li>

            <li class="code system">
              
              <ol start="59"
                  class="pre-context" id="pre-43"
                  onclick="toggle(43);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # Issue a POST request for the given URI. See #get
</code></li>
                
                <li class="pre-context-line"><code>      #
</code></li>
                
                <li class="pre-context-line"><code>      # Example:
</code></li>
                
                <li class="pre-context-line"><code>      #   post &quot;&#x2F;signup&quot;, &quot;name&quot; =&gt; &quot;Bryan&quot;
</code></li>
                
                <li class="pre-context-line"><code>      def post(uri, params = {}, env = {}, &amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        env = env_for(uri, env.merge(:method =&gt; &quot;POST&quot;, :params =&gt; params))
</code></li>
                
              </ol>
              

              <ol start="66" class="context" id="43"
                  onclick="toggle(43);">
                <li class="context-line" id="context-43"><code>        process_request(uri, env, &amp;block)</code></li>
              </ol>

              
              <ol start="67" class="post-context"
                  id="post-43" onclick="toggle(43);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Issue a PUT request for the given URI. See #get
</code></li>
                
                <li class="post-context-line"><code>      #
</code></li>
                
                <li class="post-context-line"><code>      # Example:
</code></li>
                
                <li class="post-context-line"><code>      #   put &quot;&#x2F;&quot;
</code></li>
                
                <li class="post-context-line"><code>      def put(uri, params = {}, env = {}, &amp;block)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;rubies&#x2F;ruby-2.0.0-p353&#x2F;lib&#x2F;ruby&#x2F;2.0.0&#x2F;forwardable.rb</code> in
                <code><strong>post</strong></code>
            </li>

            <li class="code app">
              
              <ol start="164"
                  class="pre-context" id="pre-44"
                  onclick="toggle(44);">
                
                <li class="pre-context-line"><code>  #   q.queue    #=&gt; [42]
</code></li>
                
                <li class="pre-context-line"><code>  #   q.push 23  #=&gt; NoMethodError
</code></li>
                
                <li class="pre-context-line"><code>  #
</code></li>
                
                <li class="pre-context-line"><code>  def def_instance_delegator(accessor, method, ali = method)
</code></li>
                
                <li class="pre-context-line"><code>    line_no = __LINE__; str = %{
</code></li>
                
                <li class="pre-context-line"><code>      def #{ali}(*args, &amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        begin
</code></li>
                
              </ol>
              

              <ol start="171" class="context" id="44"
                  onclick="toggle(44);">
                <li class="context-line" id="context-44"><code>          #{accessor}.__send__(:#{method}, *args, &amp;block)</code></li>
              </ol>

              
              <ol start="172" class="post-context"
                  id="post-44" onclick="toggle(44);">
                
                <li class="post-context-line"><code>        rescue Exception
</code></li>
                
                <li class="post-context-line"><code>          $@.delete_if{|s| %r&quot;#{Regexp.quote(__FILE__)}&quot;o =~ s} unless Forwardable::debug
</code></li>
                
                <li class="post-context-line"><code>          ::Kernel::raise
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    }
</code></li>
                
                <li class="post-context-line"><code>    # If it&#x27;s not a class or module, it&#x27;s an instance
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;Users&#x2F;watts&#x2F;code&#x2F;gSchool&#x2F;feedengine&#x2F;costner_goes_postal&#x2F;spec&#x2F;costner&#x2F;costner_spec.rb</code> in
                <code><strong>block (2 levels) in &lt;top (required)&gt;</strong></code>
            </li>

            <li class="code app">
              
              <ol start="13"
                  class="pre-context" id="pre-45"
                  onclick="toggle(45);">
                
                <li class="pre-context-line"><code>  end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>  it &quot;should 200 response for a post on GitHub Callback&quot; do
</code></li>
                
                <li class="pre-context-line"><code>    json = File.read(&#x27;.&#x2F;spec&#x2F;fixtures&#x2F;github_payload.json&#x27;)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    data = stub
</code></li>
                
                <li class="pre-context-line"><code>    FooFoBerry::GitHubNotification.stub(:new).and_return(data)
</code></li>
                
              </ol>
              

              <ol start="20" class="context" id="45"
                  onclick="toggle(45);">
                <li class="context-line" id="context-45"><code>    post &#x27;&#x2F;github&#x27;,  { &quot;payload&quot; =&gt; json }, content_type</code></li>
              </ol>

              
              <ol start="21" class="post-context"
                  id="post-45" onclick="toggle(45);">
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    expect(data).to receive(:save!)
</code></li>
                
                <li class="post-context-line"><code>    File.open(&#x27;.&#x2F;spec&#x2F;crap.txt&#x27;, &#x27;w&#x27;) do |f|
</code></li>
                
                <li class="post-context-line"><code>      f.write last_response.body
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>    expect(last_response.status).to eq 200
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rspec-core-2.14.7&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example.rb</code> in
                <code><strong>instance_eval</strong></code>
            </li>

            <li class="code system">
              
              <ol start="107"
                  class="pre-context" id="pre-46"
                  onclick="toggle(46);">
                
                <li class="pre-context-line"><code>        start(reporter)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        begin
</code></li>
                
                <li class="pre-context-line"><code>          unless pending
</code></li>
                
                <li class="pre-context-line"><code>            with_around_each_hooks do
</code></li>
                
                <li class="pre-context-line"><code>              begin
</code></li>
                
                <li class="pre-context-line"><code>                run_before_each
</code></li>
                
              </ol>
              

              <ol start="114" class="context" id="46"
                  onclick="toggle(46);">
                <li class="context-line" id="context-46"><code>                @example_group_instance.instance_eval(&amp;@example_block)</code></li>
              </ol>

              
              <ol start="115" class="post-context"
                  id="post-46" onclick="toggle(46);">
                
                <li class="post-context-line"><code>              rescue Pending::PendingDeclaredInExample =&gt; e
</code></li>
                
                <li class="post-context-line"><code>                @pending_declared_in_example = e.message
</code></li>
                
                <li class="post-context-line"><code>              rescue Exception =&gt; e
</code></li>
                
                <li class="post-context-line"><code>                set_exception(e)
</code></li>
                
                <li class="post-context-line"><code>              ensure
</code></li>
                
                <li class="post-context-line"><code>                run_after_each
</code></li>
                
                <li class="post-context-line"><code>              end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rspec-core-2.14.7&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example.rb</code> in
                <code><strong>block in run</strong></code>
            </li>

            <li class="code system">
              
              <ol start="107"
                  class="pre-context" id="pre-47"
                  onclick="toggle(47);">
                
                <li class="pre-context-line"><code>        start(reporter)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        begin
</code></li>
                
                <li class="pre-context-line"><code>          unless pending
</code></li>
                
                <li class="pre-context-line"><code>            with_around_each_hooks do
</code></li>
                
                <li class="pre-context-line"><code>              begin
</code></li>
                
                <li class="pre-context-line"><code>                run_before_each
</code></li>
                
              </ol>
              

              <ol start="114" class="context" id="47"
                  onclick="toggle(47);">
                <li class="context-line" id="context-47"><code>                @example_group_instance.instance_eval(&amp;@example_block)</code></li>
              </ol>

              
              <ol start="115" class="post-context"
                  id="post-47" onclick="toggle(47);">
                
                <li class="post-context-line"><code>              rescue Pending::PendingDeclaredInExample =&gt; e
</code></li>
                
                <li class="post-context-line"><code>                @pending_declared_in_example = e.message
</code></li>
                
                <li class="post-context-line"><code>              rescue Exception =&gt; e
</code></li>
                
                <li class="post-context-line"><code>                set_exception(e)
</code></li>
                
                <li class="post-context-line"><code>              ensure
</code></li>
                
                <li class="post-context-line"><code>                run_after_each
</code></li>
                
                <li class="post-context-line"><code>              end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rspec-core-2.14.7&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example.rb</code> in
                <code><strong>with_around_each_hooks</strong></code>
            </li>

            <li class="code system">
              
              <ol start="247"
                  class="pre-context" id="pre-48"
                  onclick="toggle(48);">
                
                <li class="pre-context-line"><code>        @example_group_instance.instance_eval_with_args(*args, &amp;block)
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    private
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def with_around_each_hooks(&amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        if around_each_hooks.empty?
</code></li>
                
              </ol>
              

              <ol start="254" class="context" id="48"
                  onclick="toggle(48);">
                <li class="context-line" id="context-48"><code>          yield</code></li>
              </ol>

              
              <ol start="255" class="post-context"
                  id="post-48" onclick="toggle(48);">
                
                <li class="post-context-line"><code>        else
</code></li>
                
                <li class="post-context-line"><code>          @example_group_class.run_around_each_hooks(self, Example.procsy(metadata, &amp;block))
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      rescue Exception =&gt; e
</code></li>
                
                <li class="post-context-line"><code>        set_exception(e, &quot;in an around(:each) hook&quot;)
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rspec-core-2.14.7&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example.rb</code> in
                <code><strong>run</strong></code>
            </li>

            <li class="code system">
              
              <ol start="104"
                  class="pre-context" id="pre-49"
                  onclick="toggle(49);">
                
                <li class="pre-context-line"><code>        @example_group_instance = example_group_instance
</code></li>
                
                <li class="pre-context-line"><code>        @example_group_instance.example = self
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        start(reporter)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        begin
</code></li>
                
                <li class="pre-context-line"><code>          unless pending
</code></li>
                
              </ol>
              

              <ol start="111" class="context" id="49"
                  onclick="toggle(49);">
                <li class="context-line" id="context-49"><code>            with_around_each_hooks do</code></li>
              </ol>

              
              <ol start="112" class="post-context"
                  id="post-49" onclick="toggle(49);">
                
                <li class="post-context-line"><code>              begin
</code></li>
                
                <li class="post-context-line"><code>                run_before_each
</code></li>
                
                <li class="post-context-line"><code>                @example_group_instance.instance_eval(&amp;@example_block)
</code></li>
                
                <li class="post-context-line"><code>              rescue Pending::PendingDeclaredInExample =&gt; e
</code></li>
                
                <li class="post-context-line"><code>                @pending_declared_in_example = e.message
</code></li>
                
                <li class="post-context-line"><code>              rescue Exception =&gt; e
</code></li>
                
                <li class="post-context-line"><code>                set_exception(e)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rspec-core-2.14.7&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example_group.rb</code> in
                <code><strong>block in run_examples</strong></code>
            </li>

            <li class="code system">
              
              <ol start="383"
                  class="pre-context" id="pre-50"
                  onclick="toggle(50);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # @private
</code></li>
                
                <li class="pre-context-line"><code>      def self.run_examples(reporter)
</code></li>
                
                <li class="pre-context-line"><code>        filtered_examples.ordered.map do |example|
</code></li>
                
                <li class="pre-context-line"><code>          next if RSpec.wants_to_quit
</code></li>
                
                <li class="pre-context-line"><code>          instance = new
</code></li>
                
                <li class="pre-context-line"><code>          set_ivars(instance, before_all_ivars)
</code></li>
                
              </ol>
              

              <ol start="390" class="context" id="50"
                  onclick="toggle(50);">
                <li class="context-line" id="context-50"><code>          succeeded = example.run(instance, reporter)</code></li>
              </ol>

              
              <ol start="391" class="post-context"
                  id="post-50" onclick="toggle(50);">
                
                <li class="post-context-line"><code>          RSpec.wants_to_quit = true if fail_fast? &amp;&amp; !succeeded
</code></li>
                
                <li class="post-context-line"><code>          succeeded
</code></li>
                
                <li class="post-context-line"><code>        end.all?
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # @private
</code></li>
                
                <li class="post-context-line"><code>      def self.fail_filtered_examples(exception, reporter)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rspec-core-2.14.7&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example_group.rb</code> in
                <code><strong>map</strong></code>
            </li>

            <li class="code system">
              
              <ol start="379"
                  class="pre-context" id="pre-51"
                  onclick="toggle(51);">
                
                <li class="pre-context-line"><code>          before_all_ivars.clear
</code></li>
                
                <li class="pre-context-line"><code>          reporter.example_group_finished(self)
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # @private
</code></li>
                
                <li class="pre-context-line"><code>      def self.run_examples(reporter)
</code></li>
                
              </ol>
              

              <ol start="386" class="context" id="51"
                  onclick="toggle(51);">
                <li class="context-line" id="context-51"><code>        filtered_examples.ordered.map do |example|</code></li>
              </ol>

              
              <ol start="387" class="post-context"
                  id="post-51" onclick="toggle(51);">
                
                <li class="post-context-line"><code>          next if RSpec.wants_to_quit
</code></li>
                
                <li class="post-context-line"><code>          instance = new
</code></li>
                
                <li class="post-context-line"><code>          set_ivars(instance, before_all_ivars)
</code></li>
                
                <li class="post-context-line"><code>          succeeded = example.run(instance, reporter)
</code></li>
                
                <li class="post-context-line"><code>          RSpec.wants_to_quit = true if fail_fast? &amp;&amp; !succeeded
</code></li>
                
                <li class="post-context-line"><code>          succeeded
</code></li>
                
                <li class="post-context-line"><code>        end.all?
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rspec-core-2.14.7&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example_group.rb</code> in
                <code><strong>run_examples</strong></code>
            </li>

            <li class="code system">
              
              <ol start="379"
                  class="pre-context" id="pre-52"
                  onclick="toggle(52);">
                
                <li class="pre-context-line"><code>          before_all_ivars.clear
</code></li>
                
                <li class="pre-context-line"><code>          reporter.example_group_finished(self)
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # @private
</code></li>
                
                <li class="pre-context-line"><code>      def self.run_examples(reporter)
</code></li>
                
              </ol>
              

              <ol start="386" class="context" id="52"
                  onclick="toggle(52);">
                <li class="context-line" id="context-52"><code>        filtered_examples.ordered.map do |example|</code></li>
              </ol>

              
              <ol start="387" class="post-context"
                  id="post-52" onclick="toggle(52);">
                
                <li class="post-context-line"><code>          next if RSpec.wants_to_quit
</code></li>
                
                <li class="post-context-line"><code>          instance = new
</code></li>
                
                <li class="post-context-line"><code>          set_ivars(instance, before_all_ivars)
</code></li>
                
                <li class="post-context-line"><code>          succeeded = example.run(instance, reporter)
</code></li>
                
                <li class="post-context-line"><code>          RSpec.wants_to_quit = true if fail_fast? &amp;&amp; !succeeded
</code></li>
                
                <li class="post-context-line"><code>          succeeded
</code></li>
                
                <li class="post-context-line"><code>        end.all?
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rspec-core-2.14.7&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;example_group.rb</code> in
                <code><strong>run</strong></code>
            </li>

            <li class="code system">
              
              <ol start="364"
                  class="pre-context" id="pre-53"
                  onclick="toggle(53);">
                
                <li class="pre-context-line"><code>          RSpec.clear_remaining_example_groups if top_level?
</code></li>
                
                <li class="pre-context-line"><code>          return
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>        reporter.example_group_started(self)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        begin
</code></li>
                
                <li class="pre-context-line"><code>          run_before_all_hooks(new)
</code></li>
                
              </ol>
              

              <ol start="371" class="context" id="53"
                  onclick="toggle(53);">
                <li class="context-line" id="context-53"><code>          result_for_this_group = run_examples(reporter)</code></li>
              </ol>

              
              <ol start="372" class="post-context"
                  id="post-53" onclick="toggle(53);">
                
                <li class="post-context-line"><code>          results_for_descendants = children.ordered.map {|child| child.run(reporter)}.all?
</code></li>
                
                <li class="post-context-line"><code>          result_for_this_group &amp;&amp; results_for_descendants
</code></li>
                
                <li class="post-context-line"><code>        rescue Exception =&gt; ex
</code></li>
                
                <li class="post-context-line"><code>          RSpec.wants_to_quit = true if fail_fast?
</code></li>
                
                <li class="post-context-line"><code>          fail_filtered_examples(ex, reporter)
</code></li>
                
                <li class="post-context-line"><code>        ensure
</code></li>
                
                <li class="post-context-line"><code>          run_after_all_hooks(new)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rspec-core-2.14.7&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;command_line.rb</code> in
                <code><strong>block (2 levels) in run</strong></code>
            </li>

            <li class="code system">
              
              <ol start="21"
                  class="pre-context" id="pre-54"
                  onclick="toggle(54);">
                
                <li class="pre-context-line"><code>        @options.configure(@configuration)
</code></li>
                
                <li class="pre-context-line"><code>        @configuration.load_spec_files
</code></li>
                
                <li class="pre-context-line"><code>        @world.announce_filters
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        @configuration.reporter.report(@world.example_count, @configuration.randomize? ? @configuration.seed : nil) do |reporter|
</code></li>
                
                <li class="pre-context-line"><code>          begin
</code></li>
                
                <li class="pre-context-line"><code>            @configuration.run_hook(:before, :suite)
</code></li>
                
              </ol>
              

              <ol start="28" class="context" id="54"
                  onclick="toggle(54);">
                <li class="context-line" id="context-54"><code>            @world.example_groups.ordered.map {|g| g.run(reporter)}.all? ? 0 : @configuration.failure_exit_code</code></li>
              </ol>

              
              <ol start="29" class="post-context"
                  id="post-54" onclick="toggle(54);">
                
                <li class="post-context-line"><code>          ensure
</code></li>
                
                <li class="post-context-line"><code>            @configuration.run_hook(:after, :suite)
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rspec-core-2.14.7&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;command_line.rb</code> in
                <code><strong>map</strong></code>
            </li>

            <li class="code system">
              
              <ol start="21"
                  class="pre-context" id="pre-55"
                  onclick="toggle(55);">
                
                <li class="pre-context-line"><code>        @options.configure(@configuration)
</code></li>
                
                <li class="pre-context-line"><code>        @configuration.load_spec_files
</code></li>
                
                <li class="pre-context-line"><code>        @world.announce_filters
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        @configuration.reporter.report(@world.example_count, @configuration.randomize? ? @configuration.seed : nil) do |reporter|
</code></li>
                
                <li class="pre-context-line"><code>          begin
</code></li>
                
                <li class="pre-context-line"><code>            @configuration.run_hook(:before, :suite)
</code></li>
                
              </ol>
              

              <ol start="28" class="context" id="55"
                  onclick="toggle(55);">
                <li class="context-line" id="context-55"><code>            @world.example_groups.ordered.map {|g| g.run(reporter)}.all? ? 0 : @configuration.failure_exit_code</code></li>
              </ol>

              
              <ol start="29" class="post-context"
                  id="post-55" onclick="toggle(55);">
                
                <li class="post-context-line"><code>          ensure
</code></li>
                
                <li class="post-context-line"><code>            @configuration.run_hook(:after, :suite)
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rspec-core-2.14.7&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;command_line.rb</code> in
                <code><strong>block in run</strong></code>
            </li>

            <li class="code system">
              
              <ol start="21"
                  class="pre-context" id="pre-56"
                  onclick="toggle(56);">
                
                <li class="pre-context-line"><code>        @options.configure(@configuration)
</code></li>
                
                <li class="pre-context-line"><code>        @configuration.load_spec_files
</code></li>
                
                <li class="pre-context-line"><code>        @world.announce_filters
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        @configuration.reporter.report(@world.example_count, @configuration.randomize? ? @configuration.seed : nil) do |reporter|
</code></li>
                
                <li class="pre-context-line"><code>          begin
</code></li>
                
                <li class="pre-context-line"><code>            @configuration.run_hook(:before, :suite)
</code></li>
                
              </ol>
              

              <ol start="28" class="context" id="56"
                  onclick="toggle(56);">
                <li class="context-line" id="context-56"><code>            @world.example_groups.ordered.map {|g| g.run(reporter)}.all? ? 0 : @configuration.failure_exit_code</code></li>
              </ol>

              
              <ol start="29" class="post-context"
                  id="post-56" onclick="toggle(56);">
                
                <li class="post-context-line"><code>          ensure
</code></li>
                
                <li class="post-context-line"><code>            @configuration.run_hook(:after, :suite)
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rspec-core-2.14.7&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;reporter.rb</code> in
                <code><strong>report</strong></code>
            </li>

            <li class="code system">
              
              <ol start="51"
                  class="pre-context" id="pre-57"
                  onclick="toggle(57);">
                
                <li class="pre-context-line"><code>    #     reporter.report(group.examples.size) do |r|
</code></li>
                
                <li class="pre-context-line"><code>    #       example_groups.map {|g| g.run(r) }
</code></li>
                
                <li class="pre-context-line"><code>    #     end
</code></li>
                
                <li class="pre-context-line"><code>    #
</code></li>
                
                <li class="pre-context-line"><code>    def report(expected_example_count, seed=nil)
</code></li>
                
                <li class="pre-context-line"><code>      start(expected_example_count)
</code></li>
                
                <li class="pre-context-line"><code>      begin
</code></li>
                
              </ol>
              

              <ol start="58" class="context" id="57"
                  onclick="toggle(57);">
                <li class="context-line" id="context-57"><code>        yield self</code></li>
              </ol>

              
              <ol start="59" class="post-context"
                  id="post-57" onclick="toggle(57);">
                
                <li class="post-context-line"><code>      ensure
</code></li>
                
                <li class="post-context-line"><code>        finish(seed)
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def start(expected_example_count)
</code></li>
                
                <li class="post-context-line"><code>      @start = RSpec::Core::Time.now
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rspec-core-2.14.7&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;command_line.rb</code> in
                <code><strong>run</strong></code>
            </li>

            <li class="code system">
              
              <ol start="18"
                  class="pre-context" id="pre-58"
                  onclick="toggle(58);">
                
                <li class="pre-context-line"><code>      def run(err, out)
</code></li>
                
                <li class="pre-context-line"><code>        @configuration.error_stream = err
</code></li>
                
                <li class="pre-context-line"><code>        @configuration.output_stream ||= out
</code></li>
                
                <li class="pre-context-line"><code>        @options.configure(@configuration)
</code></li>
                
                <li class="pre-context-line"><code>        @configuration.load_spec_files
</code></li>
                
                <li class="pre-context-line"><code>        @world.announce_filters
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
              </ol>
              

              <ol start="25" class="context" id="58"
                  onclick="toggle(58);">
                <li class="context-line" id="context-58"><code>        @configuration.reporter.report(@world.example_count, @configuration.randomize? ? @configuration.seed : nil) do |reporter|</code></li>
              </ol>

              
              <ol start="26" class="post-context"
                  id="post-58" onclick="toggle(58);">
                
                <li class="post-context-line"><code>          begin
</code></li>
                
                <li class="post-context-line"><code>            @configuration.run_hook(:before, :suite)
</code></li>
                
                <li class="post-context-line"><code>            @world.example_groups.ordered.map {|g| g.run(reporter)}.all? ? 0 : @configuration.failure_exit_code
</code></li>
                
                <li class="post-context-line"><code>          ensure
</code></li>
                
                <li class="post-context-line"><code>            @configuration.run_hook(:after, :suite)
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rspec-core-2.14.7&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;runner.rb</code> in
                <code><strong>run</strong></code>
            </li>

            <li class="code system">
              
              <ol start="73"
                  class="pre-context" id="pre-59"
                  onclick="toggle(59);">
                
                <li class="pre-context-line"><code>          begin
</code></li>
                
                <li class="pre-context-line"><code>            DRbCommandLine.new(options).run(err, out)
</code></li>
                
                <li class="pre-context-line"><code>          rescue DRb::DRbConnError
</code></li>
                
                <li class="pre-context-line"><code>            err.puts &quot;No DRb server is running. Running in local process instead ...&quot;
</code></li>
                
                <li class="pre-context-line"><code>            CommandLine.new(options).run(err, out)
</code></li>
                
                <li class="pre-context-line"><code>          end
</code></li>
                
                <li class="pre-context-line"><code>        else
</code></li>
                
              </ol>
              

              <ol start="80" class="context" id="59"
                  onclick="toggle(59);">
                <li class="context-line" id="context-59"><code>          CommandLine.new(options).run(err, out)</code></li>
              </ol>

              
              <ol start="81" class="post-context"
                  id="post-59" onclick="toggle(59);">
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      ensure
</code></li>
                
                <li class="post-context-line"><code>        RSpec.reset
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;watts&#x2F;.rvm&#x2F;gems&#x2F;ruby-2.0.0-p353&#x2F;gems&#x2F;rspec-core-2.14.7&#x2F;lib&#x2F;rspec&#x2F;core&#x2F;runner.rb</code> in
                <code><strong>block in autorun</strong></code>
            </li>

            <li class="code system">
              
              <ol start="10"
                  class="pre-context" id="pre-60"
                  onclick="toggle(60);">
                
                <li class="pre-context-line"><code>          # if we got here due to an unrescued exception (anything other than
</code></li>
                
                <li class="pre-context-line"><code>          # SystemExit, which is raised when somebody calls Kernel#exit).
</code></li>
                
                <li class="pre-context-line"><code>          next unless $!.nil? || $!.kind_of?(SystemExit)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>          # We got here because either the end of the program was reached or
</code></li>
                
                <li class="pre-context-line"><code>          # somebody called Kernel#exit.  Run the specs and then override any
</code></li>
                
                <li class="pre-context-line"><code>          # existing exit status with RSpec&#x27;s exit status if any specs failed.
</code></li>
                
              </ol>
              

              <ol start="17" class="context" id="60"
                  onclick="toggle(60);">
                <li class="context-line" id="context-60"><code>          status = run(ARGV, $stderr, $stdout).to_i</code></li>
              </ol>

              
              <ol start="18" class="post-context"
                  id="post-60" onclick="toggle(60);">
                
                <li class="post-context-line"><code>          exit status if status != 0
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>        @installed_at_exit = true
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>      AT_EXIT_HOOK_BACKTRACE_LINE = &quot;#{__FILE__}:#{__LINE__ - 2}:in `autorun&#x27;&quot;
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def self.disable_autorun!
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      

      </ul>
    </div> <!-- /BACKTRACE -->

    <div id="get">
      <h3 id="get-info">GET</h3>
      
        <p class="no-data">No GET data.</p>
      
      <div class="clear"></div>
    </div> <!-- /GET -->

    <div id="post">
      <h3 id="post-info">POST</h3>
      
        <table class="req">
          <tr>
            <th>Variable</th>
            <th>Value</th>
          </tr>
          
          <tr>
            <td>payload</td>
            <td class="code"><div>&quot;{\n    \&quot;ref\&quot;: \&quot;refs&#x2F;heads&#x2F;master\&quot;,\n    \&quot;after\&quot;: \&quot;96dd704dc8770624e5da9082498c531edf0aef4a\&quot;,\n    \&quot;before\&quot;: \&quot;96dd704dc8770624e5da9082498c531edf0aef4a\&quot;,\n    \&quot;created\&quot;: false,\n    \&quot;deleted\&quot;: false,\n    \&quot;forced\&quot;: false,\n    \&quot;compare\&quot;: \&quot;https:&#x2F;&#x2F;github.com&#x2F;thewatts&#x2F;testing-callbacks&#x2F;compare&#x2F;96dd704dc877...96dd704dc877\&quot;,\n    \&quot;commits\&quot;: [],\n    \&quot;head_commit\&quot;: {\n        \&quot;id\&quot;: \&quot;96dd704dc8770624e5da9082498c531edf0aef4a\&quot;,\n        \&quot;distinct\&quot;: true,\n        \&quot;message\&quot;: \&quot;add readme\&quot;,\n        \&quot;timestamp\&quot;: \&quot;2014-01-13T18:45:47-08:00\&quot;,\n        \&quot;url\&quot;: \&quot;https:&#x2F;&#x2F;github.com&#x2F;thewatts&#x2F;testing-callbacks&#x2F;commit&#x2F;96dd704dc8770624e5da9082498c531edf0aef4a\&quot;,\n        \&quot;author\&quot;: {\n            \&quot;name\&quot;: \&quot;Nathaniel Watts\&quot;,\n            \&quot;email\&quot;: \&quot;reg@nathanielwatts.com\&quot;,\n            \&quot;username\&quot;: \&quot;thewatts\&quot;\n        },\n        \&quot;committer\&quot;: {\n            \&quot;name\&quot;: \&quot;Nathaniel Watts\&quot;,\n            \&quot;email\&quot;: \&quot;reg@nathanielwatts.com\&quot;,\n            \&quot;username\&quot;: \&quot;thewatts\&quot;\n        },\n        \&quot;added\&quot;: [\n            \&quot;readme.md\&quot;\n        ],\n        \&quot;removed\&quot;: [],\n        \&quot;modified\&quot;: []\n    },\n    \&quot;repository\&quot;: {\n        \&quot;id\&quot;: 15889813,\n        \&quot;name\&quot;: \&quot;testing-callbacks\&quot;,\n        \&quot;url\&quot;: \&quot;https:&#x2F;&#x2F;github.com&#x2F;thewatts&#x2F;testing-callbacks\&quot;,\n        \&quot;description\&quot;: \&quot;Repo for testing callbacks (changing and pushing files)\&quot;,\n        \&quot;watchers\&quot;: 0,\n        \&quot;stargazers\&quot;: 0,\n        \&quot;forks\&quot;: 0,\n        \&quot;fork\&quot;: false,\n        \&quot;size\&quot;: 0,\n        \&quot;owner\&quot;: {\n            \&quot;name\&quot;: \&quot;thewatts\&quot;,\n            \&quot;email\&quot;: \&quot;reg@nathanielwatts.com\&quot;\n        },\n        \&quot;private\&quot;: false,\n        \&quot;open_issues\&quot;: 0,\n        \&quot;has_issues\&quot;: true,\n        \&quot;has_downloads\&quot;: true,\n        \&quot;has_wiki\&quot;: true,\n        \&quot;created_at\&quot;: 1389667508,\n        \&quot;pushed_at\&quot;: 1389667596,\n        \&quot;master_branch\&quot;: \&quot;master\&quot;\n    },\n    \&quot;pusher\&quot;: {\n        \&quot;name\&quot;: \&quot;none\&quot;\n    }\n}\n&quot;</div></td>
          </tr>
          
        </table>
      
      <div class="clear"></div>
    </div> <!-- /POST -->

    <div id="cookies">
      <h3 id="cookie-info">COOKIES</h3>
      
        <p class="no-data">No cookie data.</p>
      
      <div class="clear"></div>
    </div> <!-- /COOKIES -->

    <div id="rack">
      <h3 id="env-info">Rack ENV</h3>
      <table class="req">
        <tr>
          <th>Variable</th>
          <th>Value</th>
        </tr>
         
         <tr>
           <td>CONTENT_LENGTH</td>
           <td class="code"><div>2468</div></td>
         </tr>
         
         <tr>
           <td>CONTENT_TYPE</td>
           <td class="code"><div>application&#x2F;x-www-form-urlencoded</div></td>
         </tr>
         
         <tr>
           <td>Content-Type</td>
           <td class="code"><div>application&#x2F;json</div></td>
         </tr>
         
         <tr>
           <td>HTTPS</td>
           <td class="code"><div>off</div></td>
         </tr>
         
         <tr>
           <td>HTTP_COOKIE</td>
           <td class="code"><div></div></td>
         </tr>
         
         <tr>
           <td>HTTP_HOST</td>
           <td class="code"><div>example.org</div></td>
         </tr>
         
         <tr>
           <td>PATH_INFO</td>
           <td class="code"><div>&#x2F;github</div></td>
         </tr>
         
         <tr>
           <td>QUERY_STRING</td>
           <td class="code"><div></div></td>
         </tr>
         
         <tr>
           <td>REMOTE_ADDR</td>
           <td class="code"><div>127.0.0.1</div></td>
         </tr>
         
         <tr>
           <td>REQUEST_METHOD</td>
           <td class="code"><div>POST</div></td>
         </tr>
         
         <tr>
           <td>SCRIPT_NAME</td>
           <td class="code"><div></div></td>
         </tr>
         
         <tr>
           <td>SERVER_NAME</td>
           <td class="code"><div>example.org</div></td>
         </tr>
         
         <tr>
           <td>SERVER_PORT</td>
           <td class="code"><div>80</div></td>
         </tr>
         
         <tr>
           <td>rack.errors</td>
           <td class="code"><div>#&lt;Object:0x00000101d16788&gt;</div></td>
         </tr>
         
         <tr>
           <td>rack.input</td>
           <td class="code"><div>#&lt;StringIO:0x000001029cdc10&gt;</div></td>
         </tr>
         
         <tr>
           <td>rack.logger</td>
           <td class="code"><div>#&lt;Rack::NullLogger:0x00000101e4faa0 @app=#&lt;Rack::Protection::FrameOptions:0x00000101e4fb68 @app=#&lt;Rack::Protection::HttpOrigin:0x00000101e4fc08 @app=#&lt;Rack::Protection::IPSpoofing:0x00000101e4fcd0 @app=#&lt;Rack::Protection::JsonCsrf:0x00000101e4fd48 @app=#&lt;Rack::Protection::PathTraversal:0x00000101e4fde8 @app=#&lt;Rack::Protection::XSSHeader:0x00000101e44038 @app=#&lt;Costner:0x00000101d54218 @default_layout=:layout, @app=nil, @template_cache=#&lt;Tilt::Cache:0x00000101d541c8 @cache={}&gt;&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;], :xss_mode=&gt;:block, :nosniff=&gt;true, :except=&gt;[:session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;], :except=&gt;[:session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;], :except=&gt;[:session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;], :except=&gt;[:session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;], :except=&gt;[:session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;], :frame_options=&gt;:sameorigin, :except=&gt;[:session_hijacking, :remote_token]}&gt;&gt;</div></td>
         </tr>
         
         <tr>
           <td>rack.multiprocess</td>
           <td class="code"><div>true</div></td>
         </tr>
         
         <tr>
           <td>rack.multithread</td>
           <td class="code"><div>true</div></td>
         </tr>
         
         <tr>
           <td>rack.request.cookie_hash</td>
           <td class="code"><div>{}</div></td>
         </tr>
         
         <tr>
           <td>rack.request.cookie_string</td>
           <td class="code"><div></div></td>
         </tr>
         
         <tr>
           <td>rack.request.form_hash</td>
           <td class="code"><div>{&quot;payload&quot;=&gt;&quot;{\n    \&quot;ref\&quot;: \&quot;refs&#x2F;heads&#x2F;master\&quot;,\n    \&quot;after\&quot;: \&quot;96dd704dc8770624e5da9082498c531edf0aef4a\&quot;,\n    \&quot;before\&quot;: \&quot;96dd704dc8770624e5da9082498c531edf0aef4a\&quot;,\n    \&quot;created\&quot;: false,\n    \&quot;deleted\&quot;: false,\n    \&quot;forced\&quot;: false,\n    \&quot;compare\&quot;: \&quot;https:&#x2F;&#x2F;github.com&#x2F;thewatts&#x2F;testing-callbacks&#x2F;compare&#x2F;96dd704dc877...96dd704dc877\&quot;,\n    \&quot;commits\&quot;: [],\n    \&quot;head_commit\&quot;: {\n        \&quot;id\&quot;: \&quot;96dd704dc8770624e5da9082498c531edf0aef4a\&quot;,\n        \&quot;distinct\&quot;: true,\n        \&quot;message\&quot;: \&quot;add readme\&quot;,\n        \&quot;timestamp\&quot;: \&quot;2014-01-13T18:45:47-08:00\&quot;,\n        \&quot;url\&quot;: \&quot;https:&#x2F;&#x2F;github.com&#x2F;thewatts&#x2F;testing-callbacks&#x2F;commit&#x2F;96dd704dc8770624e5da9082498c531edf0aef4a\&quot;,\n        \&quot;author\&quot;: {\n            \&quot;name\&quot;: \&quot;Nathaniel Watts\&quot;,\n            \&quot;email\&quot;: \&quot;reg@nathanielwatts.com\&quot;,\n            \&quot;username\&quot;: \&quot;thewatts\&quot;\n        },\n        \&quot;committer\&quot;: {\n            \&quot;name\&quot;: \&quot;Nathaniel Watts\&quot;,\n            \&quot;email\&quot;: \&quot;reg@nathanielwatts.com\&quot;,\n            \&quot;username\&quot;: \&quot;thewatts\&quot;\n        },\n        \&quot;added\&quot;: [\n            \&quot;readme.md\&quot;\n        ],\n        \&quot;removed\&quot;: [],\n        \&quot;modified\&quot;: []\n    },\n    \&quot;repository\&quot;: {\n        \&quot;id\&quot;: 15889813,\n        \&quot;name\&quot;: \&quot;testing-callbacks\&quot;,\n        \&quot;url\&quot;: \&quot;https:&#x2F;&#x2F;github.com&#x2F;thewatts&#x2F;testing-callbacks\&quot;,\n        \&quot;description\&quot;: \&quot;Repo for testing callbacks (changing and pushing files)\&quot;,\n        \&quot;watchers\&quot;: 0,\n        \&quot;stargazers\&quot;: 0,\n        \&quot;forks\&quot;: 0,\n        \&quot;fork\&quot;: false,\n        \&quot;size\&quot;: 0,\n        \&quot;owner\&quot;: {\n            \&quot;name\&quot;: \&quot;thewatts\&quot;,\n            \&quot;email\&quot;: \&quot;reg@nathanielwatts.com\&quot;\n        },\n        \&quot;private\&quot;: false,\n        \&quot;open_issues\&quot;: 0,\n        \&quot;has_issues\&quot;: true,\n        \&quot;has_downloads\&quot;: true,\n        \&quot;has_wiki\&quot;: true,\n        \&quot;created_at\&quot;: 1389667508,\n        \&quot;pushed_at\&quot;: 1389667596,\n        \&quot;master_branch\&quot;: \&quot;master\&quot;\n    },\n    \&quot;pusher\&quot;: {\n        \&quot;name\&quot;: \&quot;none\&quot;\n    }\n}\n&quot;}</div></td>
         </tr>
         
         <tr>
           <td>rack.request.form_input</td>
           <td class="code"><div>#&lt;StringIO:0x000001029cdc10&gt;</div></td>
         </tr>
         
         <tr>
           <td>rack.request.form_vars</td>
           <td class="code"><div>payload=%7B%0A++++%22ref%22%3A+%22refs%2Fheads%2Fmaster%22%2C%0A++++%22after%22%3A+%2296dd704dc8770624e5da9082498c531edf0aef4a%22%2C%0A++++%22before%22%3A+%2296dd704dc8770624e5da9082498c531edf0aef4a%22%2C%0A++++%22created%22%3A+false%2C%0A++++%22deleted%22%3A+false%2C%0A++++%22forced%22%3A+false%2C%0A++++%22compare%22%3A+%22https%3A%2F%2Fgithub.com%2Fthewatts%2Ftesting-callbacks%2Fcompare%2F96dd704dc877...96dd704dc877%22%2C%0A++++%22commits%22%3A+%5B%5D%2C%0A++++%22head_commit%22%3A+%7B%0A++++++++%22id%22%3A+%2296dd704dc8770624e5da9082498c531edf0aef4a%22%2C%0A++++++++%22distinct%22%3A+true%2C%0A++++++++%22message%22%3A+%22add+readme%22%2C%0A++++++++%22timestamp%22%3A+%222014-01-13T18%3A45%3A47-08%3A00%22%2C%0A++++++++%22url%22%3A+%22https%3A%2F%2Fgithub.com%2Fthewatts%2Ftesting-callbacks%2Fcommit%2F96dd704dc8770624e5da9082498c531edf0aef4a%22%2C%0A++++++++%22author%22%3A+%7B%0A++++++++++++%22name%22%3A+%22Nathaniel+Watts%22%2C%0A++++++++++++%22email%22%3A+%22reg%40nathanielwatts.com%22%2C%0A++++++++++++%22username%22%3A+%22thewatts%22%0A++++++++%7D%2C%0A++++++++%22committer%22%3A+%7B%0A++++++++++++%22name%22%3A+%22Nathaniel+Watts%22%2C%0A++++++++++++%22email%22%3A+%22reg%40nathanielwatts.com%22%2C%0A++++++++++++%22username%22%3A+%22thewatts%22%0A++++++++%7D%2C%0A++++++++%22added%22%3A+%5B%0A++++++++++++%22readme.md%22%0A++++++++%5D%2C%0A++++++++%22removed%22%3A+%5B%5D%2C%0A++++++++%22modified%22%3A+%5B%5D%0A++++%7D%2C%0A++++%22repository%22%3A+%7B%0A++++++++%22id%22%3A+15889813%2C%0A++++++++%22name%22%3A+%22testing-callbacks%22%2C%0A++++++++%22url%22%3A+%22https%3A%2F%2Fgithub.com%2Fthewatts%2Ftesting-callbacks%22%2C%0A++++++++%22description%22%3A+%22Repo+for+testing+callbacks+%28changing+and+pushing+files%29%22%2C%0A++++++++%22watchers%22%3A+0%2C%0A++++++++%22stargazers%22%3A+0%2C%0A++++++++%22forks%22%3A+0%2C%0A++++++++%22fork%22%3A+false%2C%0A++++++++%22size%22%3A+0%2C%0A++++++++%22owner%22%3A+%7B%0A++++++++++++%22name%22%3A+%22thewatts%22%2C%0A++++++++++++%22email%22%3A+%22reg%40nathanielwatts.com%22%0A++++++++%7D%2C%0A++++++++%22private%22%3A+false%2C%0A++++++++%22open_issues%22%3A+0%2C%0A++++++++%22has_issues%22%3A+true%2C%0A++++++++%22has_downloads%22%3A+true%2C%0A++++++++%22has_wiki%22%3A+true%2C%0A++++++++%22created_at%22%3A+1389667508%2C%0A++++++++%22pushed_at%22%3A+1389667596%2C%0A++++++++%22master_branch%22%3A+%22master%22%0A++++%7D%2C%0A++++%22pusher%22%3A+%7B%0A++++++++%22name%22%3A+%22none%22%0A++++%7D%0A%7D%0A</div></td>
         </tr>
         
         <tr>
           <td>rack.request.query_hash</td>
           <td class="code"><div>{}</div></td>
         </tr>
         
         <tr>
           <td>rack.request.query_string</td>
           <td class="code"><div></div></td>
         </tr>
         
         <tr>
           <td>rack.run_once</td>
           <td class="code"><div>false</div></td>
         </tr>
         
         <tr>
           <td>rack.test</td>
           <td class="code"><div>true</div></td>
         </tr>
         
         <tr>
           <td>rack.url_scheme</td>
           <td class="code"><div>http</div></td>
         </tr>
         
         <tr>
           <td>rack.version</td>
           <td class="code"><div>[1, 2]</div></td>
         </tr>
         
         <tr>
           <td>sinatra.accept</td>
           <td class="code"><div>[#&lt;Sinatra::Request::AcceptEntry:0x00000102b1dd18 @entry=&quot;*&#x2F;*&quot;, @type=&quot;*&#x2F;*&quot;, @params={}, @q=1.0&gt;]</div></td>
         </tr>
         
         <tr>
           <td>sinatra.error</td>
           <td class="code"><div>#&lt;RSpec::Mocks::MockExpectationError: Stub received unexpected message :save! with (no args)&gt;</div></td>
         </tr>
         
         <tr>
           <td>sinatra.route</td>
           <td class="code"><div>POST &#x2F;github</div></td>
         </tr>
         
      </table>
      <div class="clear"></div>
    </div> <!-- /RACK ENV -->

    <p id="explanation">You're seeing this error because you have
enabled the <code>show_exceptions</code> setting.</p>
  </div> <!-- /WRAP -->
  </body>
</html>
